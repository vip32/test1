{"version":3,"file":"system-config.js","sourceRoot":"","sources":["system-config.ts"],"names":[],"mappings":"AAAA;;gGAEgG;AAChG,kCAAkC;AAClC,IAAM,GAAG,GAAQ;IACf,oBAAoB,EAAE,2BAA2B;CAClD,CAAC;AAEF,mCAAmC;AACnC,IAAM,gBAAgB,GAClB,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;AAEnG,IAAM,QAAQ,GAAQ,kBAAkB,CAAC,gBAAgB,CAAC,CAAC;AAE3D,4BAA4B,SAAmB;IAC7C,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,UAAC,aAAkB,EAAE,WAAmB;QAC9D,aAAa,CAAC,yBAAsB,WAAW,CAAE,CAAC,GAAG;YACnD,MAAM,EAAE,KAAK;YACb,gBAAgB,EAAE,IAAI;YACtB,IAAI,EAAE,WAAW;SAClB,CAAC;QACF,MAAM,CAAC,aAAa,CAAC;IACvB,CAAC,EAAE,EAAE,CAAC,CAAC;AACT,CAAC;AAED,gGAAgG;AAChG;;gGAEgG;AAChG,IAAM,OAAO,GAAa;IACxB,4BAA4B;IAC5B,eAAe;IACf,iBAAiB;IACjB,mBAAmB;IACnB,eAAe;IACf,iBAAiB;IACjB,2BAA2B;IAC3B,mCAAmC;IAEnC,sBAAsB;IACtB,MAAM;IAEN,wBAAwB;IACxB,KAAK;IACL,YAAY;IACZ,aAAa;IACb,aAAa;IACb,WAAW;IACX,aAAa;IACb,kBAAkB;IAClB,aAAa;CAEd,CAAC;AAEF,IAAM,uBAAuB,GAAQ,EAAE,CAAC;AACxC,OAAO,CAAC,OAAO,CAAC,UAAC,UAAkB,IAAO,uBAAuB,CAAC,UAAU,CAAC,GAAG,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAKpG,wCAAwC;AACxC,MAAM,CAAC,MAAM,CAAC;IACZ,GAAG,EAAE,EAAC,UAAU,EAAE,iBAAiB,EAAE,MAAM,EAAE,aAAa,EAAE,MAAM,EAAE,SAAS,EAAC;IAC9E,QAAQ,EAAE,uBAAuB;CAClC,CAAC,CAAC;AAEH,kCAAkC;AAClC,MAAM,CAAC,MAAM,CAAC,EAAC,KAAA,GAAG,EAAE,UAAA,QAAQ,EAAC,CAAC,CAAC","sourcesContent":["/***********************************************************************************************\r\n * User Configuration.\r\n **********************************************************************************************/\r\n/** Map relative paths to URLs. */\r\nconst map: any = {\r\n  '@angular2-material': 'vendor/@angular2-material'\r\n};\r\n\r\n/** User packages configuration. */\r\nconst materialPackages: string[] =\r\n    ['core', 'toolbar', 'icon', 'button', 'sidenav', 'list', 'card', 'input', 'radio', 'checkbox'];\r\n\r\nconst packages: any = createCustomConfig(materialPackages);\r\n\r\nfunction createCustomConfig(packages2: string[]): any {\r\n  return packages2.reduce((packageConfig: any, packageName: string) => {\r\n    packageConfig[`@angular2-material/${packageName}`] = {\r\n      format: 'cjs',\r\n      defaultExtension: 'js',\r\n      main: packageName\r\n    };\r\n    return packageConfig;\r\n  }, {});\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////\r\n/***********************************************************************************************\r\n * Everything underneath this line is managed by the CLI.\r\n **********************************************************************************************/\r\nconst barrels: string[] = [\r\n  // Angular specific barrels.\r\n  '@angular/core',\r\n  '@angular/common',\r\n  '@angular/compiler',\r\n  '@angular/http',\r\n  '@angular/router',\r\n  '@angular/platform-browser',\r\n  '@angular/platform-browser-dynamic',\r\n\r\n  // Thirdparty barrels.\r\n  'rxjs',\r\n\r\n  // App specific barrels.\r\n  'app',\r\n  'app/shared',\r\n  'app/sidebar',\r\n  'app/profile',\r\n  'app/login',\r\n  'app/session',\r\n  'app/session-list',\r\n  'app/sidenav',\r\n  /** @cli-barrel */\r\n];\r\n\r\nconst cliSystemConfigPackages: any = {};\r\nbarrels.forEach((barrelName: string) => { cliSystemConfigPackages[barrelName] = {main: 'index'}; });\r\n\r\n/** Type declaration for ambient System. */\r\ndeclare var System: any;\r\n\r\n// Apply the CLI SystemJS configuration.\r\nSystem.config({\r\n  map: {'@angular': 'vendor/@angular', 'rxjs': 'vendor/rxjs', 'main': 'main.js'},\r\n  packages: cliSystemConfigPackages\r\n});\r\n\r\n// Apply the user's configuration.\r\nSystem.config({map, packages});\r\n"]}